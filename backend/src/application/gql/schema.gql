# Start -> Objects Types ----------
type UserObjType {
  name: String!
  email: String!
  activatedAt: String
  deletedAt: String
  createdAt: String!
  updatedAt: String!
  role: String!
}

type AccessTokenObjType {
  token: String!
  expiresIn: String!
}

type WalletObjectType {
  balance: Int!
  userId: String!
  cpfCnpj: String!
  deletedAt: String
  createdAt: String!
  updatedAt: String!
}

type TransactionObjType {
  fromCpfCnpj: String!
  toCpfCnpj: String!
  value: Int!
  createdAt: String!
}

type MetaObjType {
  total: String!
  page: String!
  limit: String!
  totalPages: String!
  remainingPages: String!
}
# End -> Objects Types ----------

# Start -> Inputs And Responses ----------
input SignUpInputType {
  name: String!
  email: String!
  cpfCnpj: String!
  phone: String
}

input SignInInputType {
  email: String!
  password: String!
}

input GenerateConfirmationTokenInputType {
  email: String!
}

type AuthResponse {
  user: UserObjType!
  accessToken: AccessTokenObjType!
}

type SignUpResponse {
  user: UserObjType!
  message: String!
}

type GenerateConfirmationTokenResponse {
  message: String!
}

type Query {
  hello: String
}

input ValidateConfirmationTokenInputType {
  email: String
  token: String
}

type ValidateConfirmationTokenResponse {
  message: String!
}

input CreatePasswordInputType {
  email: String!
  password: String!
}

type CreatePasswordResponse {
  user: UserObjType!
  accessToken: AccessTokenObjType!
}

type GetWalletReWalletObjectTypeResponse {
  wallet: WalletObjectType!
}

input CreateTransactionInputType {
  toCpfCnpj: String!
  value: Int!
}

type CreateTransactionResponse {
  wallet: WalletObjectType!
  transaction: TransactionObjType!
}

input TransactionSearchInput {
  fromCpfCnpj: String
  toCpfCnpj: String
  minValue: Float
  maxValue: Float
  startDate: String
  endDate: String
  page: Int = 1
  limit: Int = 10
}

type TransactionSearchResponse {
  data: [TransactionObjType]
  meta: MetaObjType
}
# End -> Inputs And Responses ----------

type Mutation {
  # Auth
  signUp(authDto: SignUpInputType!): SignUpResponse
  signIn(authDto: SignInInputType!): AuthResponse
  generateConfirmationToken(
    inputDto: GenerateConfirmationTokenInputType!
  ): GenerateConfirmationTokenResponse
  validateConfirmationToken(
    inputDto: ValidateConfirmationTokenInputType
  ): ValidateConfirmationTokenResponse
  createPassword(inputDto: CreatePasswordInputType!): CreatePasswordResponse

  # Wallet
  createTransaction(
    inputDto: CreateTransactionInputType!
  ): CreateTransactionResponse
}

type Query {
  # Wallet
  getWallet: GetWalletReWalletObjectTypeResponse
  searchTransactionsFromBearerAuth(
    filters: TransactionSearchInput
  ): TransactionSearchResponse
  searchTransactionsAsSuper(
    filters: TransactionSearchInput
  ): TransactionSearchResponse
}
